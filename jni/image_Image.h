/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_github_rolandhe_gm_Image */

#ifndef _Included_com_github_rolandhe_gm_Image
#define _Included_com_github_rolandhe_gm_Image
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    alocateImage
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_github_rolandhe_gm_Image_alocateImage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    cloneImage
 * Signature: (JJJI)J
 */
JNIEXPORT jlong JNICALL Java_com_github_rolandhe_gm_Image_cloneImage
  (JNIEnv *, jclass, jlong, jlong, jlong, jint);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    destoryImage
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_github_rolandhe_gm_Image_destoryImage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    setupOutputName
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_github_rolandhe_gm_Image_setupOutputName
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    setupMagick
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_github_rolandhe_gm_Image_setupMagick
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    setupDelay
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_github_rolandhe_gm_Image_setupDelay
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    recognizeFileFormat
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_github_rolandhe_gm_Image_recognizeFileFormat
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    blobToImage
 * Signature: (J[B)J
 */
JNIEXPORT jlong JNICALL Java_com_github_rolandhe_gm_Image_blobToImage
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    readImage
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_github_rolandhe_gm_Image_readImage
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    writeImage
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_rolandhe_gm_Image_writeImage
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    imageToBlob
 * Signature: (JJ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_github_rolandhe_gm_Image_imageToBlob
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    getImageColumns
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_github_rolandhe_gm_Image_getImageColumns
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    getImageRows
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_github_rolandhe_gm_Image_getImageRows
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_github_rolandhe_gm_Image
 * Method:    isPaletteImage
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_github_rolandhe_gm_Image_isPaletteImage
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
